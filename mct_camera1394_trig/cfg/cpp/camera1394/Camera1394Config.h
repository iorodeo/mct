//#line 2 "/opt/ros/diamondback/stacks/driver_common/dynamic_reconfigure/templates/ConfigType.h"
// *********************************************************
// 
// File autogenerated for the camera1394 package 
// by the dynamic_reconfigure package.
// Please do not edit.
// 
// ********************************************************/

/***********************************************************
 * Software License Agreement (BSD License)
 *
 *  Copyright (c) 2008, Willow Garage, Inc.
 *  All rights reserved.
 *
 *  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions
 *  are met:
 *
 *   * Redistributions of source code must retain the above copyright
 *     notice, this list of conditions and the following disclaimer.
 *   * Redistributions in binary form must reproduce the above
 *     copyright notice, this list of conditions and the following
 *     disclaimer in the documentation and/or other materials provided
 *     with the distribution.
 *   * Neither the name of the Willow Garage nor the names of its
 *     contributors may be used to endorse or promote products derived
 *     from this software without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 ***********************************************************/

// Author: Blaise Gassend


#ifndef __camera1394__CAMERA1394CONFIG_H__
#define __camera1394__CAMERA1394CONFIG_H__

#include <dynamic_reconfigure/config_tools.h>
#include <limits>
#include <ros/node_handle.h>
#include <dynamic_reconfigure/ConfigDescription.h>
#include <dynamic_reconfigure/ParamDescription.h>
#include <dynamic_reconfigure/config_init_mutex.h>

namespace camera1394
{
  class Camera1394ConfigStatics;
  
  class Camera1394Config
  {
  public:
    class AbstractParamDescription : public dynamic_reconfigure::ParamDescription
    {
    public:
      AbstractParamDescription(std::string n, std::string t, uint32_t l, 
          std::string d, std::string e)
      {
        name = n;
        type = t;
        level = l;
        description = d;
        edit_method = e;
      }
      
      virtual void clamp(Camera1394Config &config, const Camera1394Config &max, const Camera1394Config &min) const = 0;
      virtual void calcLevel(uint32_t &level, const Camera1394Config &config1, const Camera1394Config &config2) const = 0;
      virtual void fromServer(const ros::NodeHandle &nh, Camera1394Config &config) const = 0;
      virtual void toServer(const ros::NodeHandle &nh, const Camera1394Config &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, Camera1394Config &config) const = 0;
      virtual void toMessage(dynamic_reconfigure::Config &msg, const Camera1394Config &config) const = 0;
    };

    typedef boost::shared_ptr<AbstractParamDescription> AbstractParamDescriptionPtr;
    typedef boost::shared_ptr<const AbstractParamDescription> AbstractParamDescriptionConstPtr;
    
    template <class T>
    class ParamDescription : public AbstractParamDescription
    {
    public:
      ParamDescription(std::string name, std::string type, uint32_t level, 
          std::string description, std::string edit_method, T Camera1394Config::* f) :
        AbstractParamDescription(name, type, level, description, edit_method),
        field(f)
      {}

      T (Camera1394Config::* field);

      virtual void clamp(Camera1394Config &config, const Camera1394Config &max, const Camera1394Config &min) const
      {
        if (config.*field > max.*field)
          config.*field = max.*field;
        
        if (config.*field < min.*field)
          config.*field = min.*field;
      }

      virtual void calcLevel(uint32_t &comb_level, const Camera1394Config &config1, const Camera1394Config &config2) const
      {
        if (config1.*field != config2.*field)
          comb_level |= level;
      }

      virtual void fromServer(const ros::NodeHandle &nh, Camera1394Config &config) const
      {
        nh.getParam(name, config.*field);
      }

      virtual void toServer(const ros::NodeHandle &nh, const Camera1394Config &config) const
      {
        nh.setParam(name, config.*field);
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, Camera1394Config &config) const
      {
        return dynamic_reconfigure::ConfigTools::getParameter(msg, name, config.*field);
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const Camera1394Config &config) const
      {
        dynamic_reconfigure::ConfigTools::appendParameter(msg, name, config.*field);
      }
    };

//#line 49 "../cfg/Camera1394.cfg"
      std::string guid;
//#line 52 "../cfg/Camera1394.cfg"
      bool reset_on_open;
//#line 89 "../cfg/Camera1394.cfg"
      std::string video_mode;
//#line 93 "../cfg/Camera1394.cfg"
      std::string frame_id;
//#line 96 "../cfg/Camera1394.cfg"
      double frame_rate;
//#line 99 "../cfg/Camera1394.cfg"
      int iso_speed;
//#line 102 "../cfg/Camera1394.cfg"
      std::string camera_info_url;
//#line 107 "../cfg/Camera1394.cfg"
      int binning_x;
//#line 111 "../cfg/Camera1394.cfg"
      int binning_y;
//#line 115 "../cfg/Camera1394.cfg"
      int roi_width;
//#line 119 "../cfg/Camera1394.cfg"
      int roi_height;
//#line 123 "../cfg/Camera1394.cfg"
      int x_offset;
//#line 127 "../cfg/Camera1394.cfg"
      int y_offset;
//#line 131 "../cfg/Camera1394.cfg"
      int format7_packet_size;
//#line 148 "../cfg/Camera1394.cfg"
      std::string format7_color_coding;
//#line 160 "../cfg/Camera1394.cfg"
      std::string bayer_pattern;
//#line 174 "../cfg/Camera1394.cfg"
      std::string bayer_method;
//#line 186 "../cfg/Camera1394.cfg"
      int auto_brightness;
//#line 189 "../cfg/Camera1394.cfg"
      double brightness;
//#line 193 "../cfg/Camera1394.cfg"
      int auto_exposure;
//#line 196 "../cfg/Camera1394.cfg"
      double exposure;
//#line 199 "../cfg/Camera1394.cfg"
      int auto_focus;
//#line 202 "../cfg/Camera1394.cfg"
      double focus;
//#line 205 "../cfg/Camera1394.cfg"
      int auto_gain;
//#line 208 "../cfg/Camera1394.cfg"
      double gain;
//#line 211 "../cfg/Camera1394.cfg"
      int auto_gamma;
//#line 214 "../cfg/Camera1394.cfg"
      double gamma;
//#line 217 "../cfg/Camera1394.cfg"
      int auto_hue;
//#line 220 "../cfg/Camera1394.cfg"
      double hue;
//#line 223 "../cfg/Camera1394.cfg"
      int auto_iris;
//#line 226 "../cfg/Camera1394.cfg"
      double iris;
//#line 229 "../cfg/Camera1394.cfg"
      int auto_saturation;
//#line 232 "../cfg/Camera1394.cfg"
      double saturation;
//#line 235 "../cfg/Camera1394.cfg"
      int auto_sharpness;
//#line 238 "../cfg/Camera1394.cfg"
      double sharpness;
//#line 241 "../cfg/Camera1394.cfg"
      int auto_shutter;
//#line 244 "../cfg/Camera1394.cfg"
      double shutter;
//#line 247 "../cfg/Camera1394.cfg"
      int auto_white_balance;
//#line 251 "../cfg/Camera1394.cfg"
      double white_balance_BU;
//#line 255 "../cfg/Camera1394.cfg"
      double white_balance_RV;
//#line 258 "../cfg/Camera1394.cfg"
      int auto_zoom;
//#line 261 "../cfg/Camera1394.cfg"
      double zoom;
//#line 264 "../cfg/Camera1394.cfg"
      bool use_ros_time;
//#line 138 "/opt/ros/diamondback/stacks/driver_common/dynamic_reconfigure/templates/ConfigType.h"

    bool __fromMessage__(dynamic_reconfigure::Config &msg)
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      int count = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); i++)
        if ((*i)->fromMessage(msg, *this))
          count++;
      if (count != dynamic_reconfigure::ConfigTools::size(msg))
      {
        ROS_ERROR("Camera1394Config::__fromMessage__ called with an unexpected parameter.");
        ROS_ERROR("Booleans:");
        for (unsigned int i = 0; i < msg.bools.size(); i++)
          ROS_ERROR("  %s", msg.bools[i].name.c_str());
        ROS_ERROR("Integers:");
        for (unsigned int i = 0; i < msg.ints.size(); i++)
          ROS_ERROR("  %s", msg.ints[i].name.c_str());
        ROS_ERROR("Doubles:");
        for (unsigned int i = 0; i < msg.doubles.size(); i++)
          ROS_ERROR("  %s", msg.doubles[i].name.c_str());
        ROS_ERROR("Strings:");
        for (unsigned int i = 0; i < msg.strs.size(); i++)
          ROS_ERROR("  %s", msg.strs[i].name.c_str());
        // @todo Check that there are no duplicates. Make this error more
        // explicit.
        return false;
      }
      return true;
    }

    // This version of __toMessage__ is used during initialization of
    // statics when __getParamDescriptions__ can't be called yet.
    void __toMessage__(dynamic_reconfigure::Config &msg, const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__) const
    {
      dynamic_reconfigure::ConfigTools::clear(msg);
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); i++)
        (*i)->toMessage(msg, *this);
    }
    
    void __toMessage__(dynamic_reconfigure::Config &msg) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      __toMessage__(msg, __param_descriptions__);
    }
    
    void __toServer__(const ros::NodeHandle &nh) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); i++)
        (*i)->toServer(nh, *this);
    }

    void __fromServer__(const ros::NodeHandle &nh)
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); i++)
        (*i)->fromServer(nh, *this);
    }

    void __clamp__()
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const Camera1394Config &__max__ = __getMax__();
      const Camera1394Config &__min__ = __getMin__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); i++)
        (*i)->clamp(*this, __max__, __min__);
    }

    uint32_t __level__(const Camera1394Config &config) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      uint32_t level = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); i++)
        (*i)->calcLevel(level, config, *this);
      return level;
    }
    
    static const dynamic_reconfigure::ConfigDescription &__getDescriptionMessage__();
    static const Camera1394Config &__getDefault__();
    static const Camera1394Config &__getMax__();
    static const Camera1394Config &__getMin__();
    static const std::vector<AbstractParamDescriptionConstPtr> &__getParamDescriptions__();
    
  private:
    static const Camera1394ConfigStatics *__get_statics__();
  };
  
  template <> // Max and min are ignored for strings.
  inline void Camera1394Config::ParamDescription<std::string>::clamp(Camera1394Config &config, const Camera1394Config &max, const Camera1394Config &min) const
  {
    return;
  }

  class Camera1394ConfigStatics
  {
    friend class Camera1394Config;
    
    Camera1394ConfigStatics()
    {
//#line 49 "../cfg/Camera1394.cfg"
      __min__.guid = "";
//#line 49 "../cfg/Camera1394.cfg"
      __max__.guid = "";
//#line 49 "../cfg/Camera1394.cfg"
      __default__.guid = "";
//#line 49 "../cfg/Camera1394.cfg"
      __param_descriptions__.push_back(Camera1394Config::AbstractParamDescriptionConstPtr(new Camera1394Config::ParamDescription<std::string>("guid", "str", 3, "Global Unique ID of camera, 16 hex digits (use first camera if null).", "", &Camera1394Config::guid)));
//#line 52 "../cfg/Camera1394.cfg"
      __min__.reset_on_open = 0;
//#line 52 "../cfg/Camera1394.cfg"
      __max__.reset_on_open = 1;
//#line 52 "../cfg/Camera1394.cfg"
      __default__.reset_on_open = 0;
//#line 52 "../cfg/Camera1394.cfg"
      __param_descriptions__.push_back(Camera1394Config::AbstractParamDescriptionConstPtr(new Camera1394Config::ParamDescription<bool>("reset_on_open", "bool", 3, "Reset camera when opening the device.", "", &Camera1394Config::reset_on_open)));
//#line 89 "../cfg/Camera1394.cfg"
      __min__.video_mode = "";
//#line 89 "../cfg/Camera1394.cfg"
      __max__.video_mode = "";
//#line 89 "../cfg/Camera1394.cfg"
      __default__.video_mode = "640x480_mono8";
//#line 89 "../cfg/Camera1394.cfg"
      __param_descriptions__.push_back(Camera1394Config::AbstractParamDescriptionConstPtr(new Camera1394Config::ParamDescription<std::string>("video_mode", "str", 3, "IIDC video mode.", "{'enum_description': 'Video mode for camera.', 'enum': [{'srcline': 54, 'description': '', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const char * const', 'value': '160x120_yuv444', 'ctype': 'std::string', 'type': 'str', 'name': 'Format0_Mode0'}, {'srcline': 55, 'description': '', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const char * const', 'value': '320x240_yuv422', 'ctype': 'std::string', 'type': 'str', 'name': 'Format0_Mode1'}, {'srcline': 56, 'description': '', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const char * const', 'value': '640x480_yuv411', 'ctype': 'std::string', 'type': 'str', 'name': 'Format0_Mode2'}, {'srcline': 57, 'description': '', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const char * const', 'value': '640x480_yuv422', 'ctype': 'std::string', 'type': 'str', 'name': 'Format0_Mode3'}, {'srcline': 58, 'description': '', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const char * const', 'value': '640x480_rgb8', 'ctype': 'std::string', 'type': 'str', 'name': 'Format0_Mode4'}, {'srcline': 59, 'description': '', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const char * const', 'value': '640x480_mono8', 'ctype': 'std::string', 'type': 'str', 'name': 'Format0_Mode5'}, {'srcline': 60, 'description': '', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const char * const', 'value': '640x480_mono16', 'ctype': 'std::string', 'type': 'str', 'name': 'Format0_Mode6'}, {'srcline': 61, 'description': '', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const char * const', 'value': '800x600_yuv422', 'ctype': 'std::string', 'type': 'str', 'name': 'Format1_Mode0'}, {'srcline': 62, 'description': '', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const char * const', 'value': '800x600_rgb8', 'ctype': 'std::string', 'type': 'str', 'name': 'Format1_Mode1'}, {'srcline': 63, 'description': '', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const char * const', 'value': '800x600_mono8', 'ctype': 'std::string', 'type': 'str', 'name': 'Format1_Mode2'}, {'srcline': 64, 'description': '', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const char * const', 'value': '800x600_mono16', 'ctype': 'std::string', 'type': 'str', 'name': 'Format1_Mode6'}, {'srcline': 65, 'description': '', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const char * const', 'value': '1024x768_yuv422', 'ctype': 'std::string', 'type': 'str', 'name': 'Format1_Mode3'}, {'srcline': 66, 'description': '', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const char * const', 'value': '1024x768_rgb8', 'ctype': 'std::string', 'type': 'str', 'name': 'Format1_Mode4'}, {'srcline': 67, 'description': '', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const char * const', 'value': '1024x768_mono8', 'ctype': 'std::string', 'type': 'str', 'name': 'Format1_Mode5'}, {'srcline': 68, 'description': '', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const char * const', 'value': '1024x768_mono16', 'ctype': 'std::string', 'type': 'str', 'name': 'Format1_Mode7'}, {'srcline': 69, 'description': '', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const char * const', 'value': '1280x960_yuv422', 'ctype': 'std::string', 'type': 'str', 'name': 'Format2_Mode0'}, {'srcline': 70, 'description': '', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const char * const', 'value': '1280x960_rgb8', 'ctype': 'std::string', 'type': 'str', 'name': 'Format2_Mode1'}, {'srcline': 71, 'description': '', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const char * const', 'value': '1280x960_mono8', 'ctype': 'std::string', 'type': 'str', 'name': 'Format2_Mode2'}, {'srcline': 72, 'description': '', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const char * const', 'value': '1280x960_mono16', 'ctype': 'std::string', 'type': 'str', 'name': 'Format2_Mode6'}, {'srcline': 73, 'description': '', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const char * const', 'value': '1600x1200_yuv422', 'ctype': 'std::string', 'type': 'str', 'name': 'Format2_Mode3'}, {'srcline': 74, 'description': '', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const char * const', 'value': '1600x1200_rgb8', 'ctype': 'std::string', 'type': 'str', 'name': 'Format2_Mode4'}, {'srcline': 75, 'description': '', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const char * const', 'value': '1600x1200_mono8', 'ctype': 'std::string', 'type': 'str', 'name': 'Format2_Mode5'}, {'srcline': 76, 'description': '', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const char * const', 'value': '1600x1200_mono16', 'ctype': 'std::string', 'type': 'str', 'name': 'Format2_Mode7'}, {'srcline': 77, 'description': '', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const char * const', 'value': 'format7_mode0', 'ctype': 'std::string', 'type': 'str', 'name': 'Format7_Mode0'}, {'srcline': 78, 'description': '', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const char * const', 'value': 'format7_mode1', 'ctype': 'std::string', 'type': 'str', 'name': 'Format7_Mode1'}, {'srcline': 79, 'description': '', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const char * const', 'value': 'format7_mode2', 'ctype': 'std::string', 'type': 'str', 'name': 'Format7_Mode2'}, {'srcline': 80, 'description': '', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const char * const', 'value': 'format7_mode3', 'ctype': 'std::string', 'type': 'str', 'name': 'Format7_Mode3'}, {'srcline': 81, 'description': '', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const char * const', 'value': 'format7_mode4', 'ctype': 'std::string', 'type': 'str', 'name': 'Format7_Mode4'}, {'srcline': 82, 'description': '', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const char * const', 'value': 'format7_mode5', 'ctype': 'std::string', 'type': 'str', 'name': 'Format7_Mode5'}, {'srcline': 83, 'description': '', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const char * const', 'value': 'format7_mode6', 'ctype': 'std::string', 'type': 'str', 'name': 'Format7_Mode6'}, {'srcline': 84, 'description': '', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const char * const', 'value': 'format7_mode7', 'ctype': 'std::string', 'type': 'str', 'name': 'Format7_Mode7'}]}", &Camera1394Config::video_mode)));
//#line 93 "../cfg/Camera1394.cfg"
      __min__.frame_id = "";
//#line 93 "../cfg/Camera1394.cfg"
      __max__.frame_id = "";
//#line 93 "../cfg/Camera1394.cfg"
      __default__.frame_id = "camera";
//#line 93 "../cfg/Camera1394.cfg"
      __param_descriptions__.push_back(Camera1394Config::AbstractParamDescriptionConstPtr(new Camera1394Config::ParamDescription<std::string>("frame_id", "str", 3, "ROS tf frame of reference, resolved with tf_prefix unless absolute.", "", &Camera1394Config::frame_id)));
//#line 96 "../cfg/Camera1394.cfg"
      __min__.frame_rate = 1.875;
//#line 96 "../cfg/Camera1394.cfg"
      __max__.frame_rate = 240.0;
//#line 96 "../cfg/Camera1394.cfg"
      __default__.frame_rate = 15.0;
//#line 96 "../cfg/Camera1394.cfg"
      __param_descriptions__.push_back(Camera1394Config::AbstractParamDescriptionConstPtr(new Camera1394Config::ParamDescription<double>("frame_rate", "double", 3, "Camera speed (frames per second).", "", &Camera1394Config::frame_rate)));
//#line 99 "../cfg/Camera1394.cfg"
      __min__.iso_speed = 100;
//#line 99 "../cfg/Camera1394.cfg"
      __max__.iso_speed = 3200;
//#line 99 "../cfg/Camera1394.cfg"
      __default__.iso_speed = 400;
//#line 99 "../cfg/Camera1394.cfg"
      __param_descriptions__.push_back(Camera1394Config::AbstractParamDescriptionConstPtr(new Camera1394Config::ParamDescription<int>("iso_speed", "int", 3, "Total IEEE 1394 bus bandwidth (Megabits/second).", "", &Camera1394Config::iso_speed)));
//#line 102 "../cfg/Camera1394.cfg"
      __min__.camera_info_url = "";
//#line 102 "../cfg/Camera1394.cfg"
      __max__.camera_info_url = "";
//#line 102 "../cfg/Camera1394.cfg"
      __default__.camera_info_url = "";
//#line 102 "../cfg/Camera1394.cfg"
      __param_descriptions__.push_back(Camera1394Config::AbstractParamDescriptionConstPtr(new Camera1394Config::ParamDescription<std::string>("camera_info_url", "str", 0, "Camera [[camera_info_manager#URL_Names|calibration URL]] for this video_mode (uncalibrated if null).", "", &Camera1394Config::camera_info_url)));
//#line 107 "../cfg/Camera1394.cfg"
      __min__.binning_x = 0;
//#line 107 "../cfg/Camera1394.cfg"
      __max__.binning_x = 4;
//#line 107 "../cfg/Camera1394.cfg"
      __default__.binning_x = 0;
//#line 107 "../cfg/Camera1394.cfg"
      __param_descriptions__.push_back(Camera1394Config::AbstractParamDescriptionConstPtr(new Camera1394Config::ParamDescription<int>("binning_x", "int", 3, "Number of pixels combined for Format7 horizontal binning, use device hints if zero.", "", &Camera1394Config::binning_x)));
//#line 111 "../cfg/Camera1394.cfg"
      __min__.binning_y = 0;
//#line 111 "../cfg/Camera1394.cfg"
      __max__.binning_y = 4;
//#line 111 "../cfg/Camera1394.cfg"
      __default__.binning_y = 0;
//#line 111 "../cfg/Camera1394.cfg"
      __param_descriptions__.push_back(Camera1394Config::AbstractParamDescriptionConstPtr(new Camera1394Config::ParamDescription<int>("binning_y", "int", 3, "Number of pixels combined for Format7 vertical binning, use device hints if zero.", "", &Camera1394Config::binning_y)));
//#line 115 "../cfg/Camera1394.cfg"
      __min__.roi_width = 0;
//#line 115 "../cfg/Camera1394.cfg"
      __max__.roi_width = 65535;
//#line 115 "../cfg/Camera1394.cfg"
      __default__.roi_width = 0;
//#line 115 "../cfg/Camera1394.cfg"
      __param_descriptions__.push_back(Camera1394Config::AbstractParamDescriptionConstPtr(new Camera1394Config::ParamDescription<int>("roi_width", "int", 3, "Width of Format7 Region of Interest in unbinned pixels, full width if zero.", "", &Camera1394Config::roi_width)));
//#line 119 "../cfg/Camera1394.cfg"
      __min__.roi_height = 0;
//#line 119 "../cfg/Camera1394.cfg"
      __max__.roi_height = 65535;
//#line 119 "../cfg/Camera1394.cfg"
      __default__.roi_height = 0;
//#line 119 "../cfg/Camera1394.cfg"
      __param_descriptions__.push_back(Camera1394Config::AbstractParamDescriptionConstPtr(new Camera1394Config::ParamDescription<int>("roi_height", "int", 3, "Height of Format7 Region of Interest in unbinned pixels, full height if zero.", "", &Camera1394Config::roi_height)));
//#line 123 "../cfg/Camera1394.cfg"
      __min__.x_offset = 0;
//#line 123 "../cfg/Camera1394.cfg"
      __max__.x_offset = 65535;
//#line 123 "../cfg/Camera1394.cfg"
      __default__.x_offset = 0;
//#line 123 "../cfg/Camera1394.cfg"
      __param_descriptions__.push_back(Camera1394Config::AbstractParamDescriptionConstPtr(new Camera1394Config::ParamDescription<int>("x_offset", "int", 3, "Horizontal offset for left side of Format7 ROI in unbinned pixels.", "", &Camera1394Config::x_offset)));
//#line 127 "../cfg/Camera1394.cfg"
      __min__.y_offset = 0;
//#line 127 "../cfg/Camera1394.cfg"
      __max__.y_offset = 65535;
//#line 127 "../cfg/Camera1394.cfg"
      __default__.y_offset = 0;
//#line 127 "../cfg/Camera1394.cfg"
      __param_descriptions__.push_back(Camera1394Config::AbstractParamDescriptionConstPtr(new Camera1394Config::ParamDescription<int>("y_offset", "int", 3, "Vertical offset for top of Format7 ROI in unbinned pixels.", "", &Camera1394Config::y_offset)));
//#line 131 "../cfg/Camera1394.cfg"
      __min__.format7_packet_size = 0;
//#line 131 "../cfg/Camera1394.cfg"
      __max__.format7_packet_size = 39320;
//#line 131 "../cfg/Camera1394.cfg"
      __default__.format7_packet_size = 0;
//#line 131 "../cfg/Camera1394.cfg"
      __param_descriptions__.push_back(Camera1394Config::AbstractParamDescriptionConstPtr(new Camera1394Config::ParamDescription<int>("format7_packet_size", "int", 3, "Format7 packet size (bytes), device-recommended size if zero.", "", &Camera1394Config::format7_packet_size)));
//#line 148 "../cfg/Camera1394.cfg"
      __min__.format7_color_coding = "";
//#line 148 "../cfg/Camera1394.cfg"
      __max__.format7_color_coding = "";
//#line 148 "../cfg/Camera1394.cfg"
      __default__.format7_color_coding = "mono8";
//#line 148 "../cfg/Camera1394.cfg"
      __param_descriptions__.push_back(Camera1394Config::AbstractParamDescriptionConstPtr(new Camera1394Config::ParamDescription<std::string>("format7_color_coding", "str", 3, "Color coding (only for Format7 modes)", "{'enum_description': 'Format7 color coding methods', 'enum': [{'srcline': 133, 'description': '', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const char * const', 'value': 'mono8', 'ctype': 'std::string', 'type': 'str', 'name': 'mono8'}, {'srcline': 134, 'description': '', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const char * const', 'value': 'mono16', 'ctype': 'std::string', 'type': 'str', 'name': 'mono16'}, {'srcline': 135, 'description': '', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const char * const', 'value': 'mono16s', 'ctype': 'std::string', 'type': 'str', 'name': 'mono16s'}, {'srcline': 136, 'description': '', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const char * const', 'value': 'raw8', 'ctype': 'std::string', 'type': 'str', 'name': 'raw8'}, {'srcline': 137, 'description': '', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const char * const', 'value': 'raw16', 'ctype': 'std::string', 'type': 'str', 'name': 'raw16'}, {'srcline': 138, 'description': '', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const char * const', 'value': 'rgb8', 'ctype': 'std::string', 'type': 'str', 'name': 'rgb8'}, {'srcline': 139, 'description': '', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const char * const', 'value': 'rgb16', 'ctype': 'std::string', 'type': 'str', 'name': 'rgb16'}, {'srcline': 140, 'description': '', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const char * const', 'value': 'rgb16s', 'ctype': 'std::string', 'type': 'str', 'name': 'rgb16s'}, {'srcline': 141, 'description': '', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const char * const', 'value': 'yuv411', 'ctype': 'std::string', 'type': 'str', 'name': 'yuv411'}, {'srcline': 142, 'description': '', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const char * const', 'value': 'yuv422', 'ctype': 'std::string', 'type': 'str', 'name': 'yuv422'}, {'srcline': 143, 'description': '', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const char * const', 'value': 'yuv444', 'ctype': 'std::string', 'type': 'str', 'name': 'yuv444'}]}", &Camera1394Config::format7_color_coding)));
//#line 160 "../cfg/Camera1394.cfg"
      __min__.bayer_pattern = "";
//#line 160 "../cfg/Camera1394.cfg"
      __max__.bayer_pattern = "";
//#line 160 "../cfg/Camera1394.cfg"
      __default__.bayer_pattern = "";
//#line 160 "../cfg/Camera1394.cfg"
      __param_descriptions__.push_back(Camera1394Config::AbstractParamDescriptionConstPtr(new Camera1394Config::ParamDescription<std::string>("bayer_pattern", "str", 3, "Bayer color encoding pattern (default: none).", "{'enum_description': 'Bayer color encoding patterns', 'enum': [{'srcline': 151, 'description': 'No Bayer encoding', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const char * const', 'value': '', 'ctype': 'std::string', 'type': 'str', 'name': 'none'}, {'srcline': 152, 'description': '', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const char * const', 'value': 'rggb', 'ctype': 'std::string', 'type': 'str', 'name': 'rggb'}, {'srcline': 153, 'description': '', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const char * const', 'value': 'gbrg', 'ctype': 'std::string', 'type': 'str', 'name': 'gbrg'}, {'srcline': 154, 'description': '', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const char * const', 'value': 'grbg', 'ctype': 'std::string', 'type': 'str', 'name': 'grbg'}, {'srcline': 155, 'description': '', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const char * const', 'value': 'bggr', 'ctype': 'std::string', 'type': 'str', 'name': 'bggr'}]}", &Camera1394Config::bayer_pattern)));
//#line 174 "../cfg/Camera1394.cfg"
      __min__.bayer_method = "";
//#line 174 "../cfg/Camera1394.cfg"
      __max__.bayer_method = "";
//#line 174 "../cfg/Camera1394.cfg"
      __default__.bayer_method = "";
//#line 174 "../cfg/Camera1394.cfg"
      __param_descriptions__.push_back(Camera1394Config::AbstractParamDescriptionConstPtr(new Camera1394Config::ParamDescription<std::string>("bayer_method", "str", 3, "Bayer decoding method (default: ROS image_proc).", "{'enum_description': 'Bayer method', 'enum': [{'srcline': 163, 'description': 'Decode via ROS image_proc', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const char * const', 'value': '', 'ctype': 'std::string', 'type': 'str', 'name': 'image_proc'}, {'srcline': 164, 'description': '', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const char * const', 'value': 'DownSample', 'ctype': 'std::string', 'type': 'str', 'name': 'DownSample'}, {'srcline': 165, 'description': '', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const char * const', 'value': 'Simple', 'ctype': 'std::string', 'type': 'str', 'name': 'Simple'}, {'srcline': 166, 'description': '', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const char * const', 'value': 'Bilinear', 'ctype': 'std::string', 'type': 'str', 'name': 'Bilinear'}, {'srcline': 167, 'description': '', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const char * const', 'value': 'HQ', 'ctype': 'std::string', 'type': 'str', 'name': 'HQ'}, {'srcline': 168, 'description': '', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const char * const', 'value': 'VNG', 'ctype': 'std::string', 'type': 'str', 'name': 'VNG'}, {'srcline': 169, 'description': '', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const char * const', 'value': 'AHD', 'ctype': 'std::string', 'type': 'str', 'name': 'AHD'}]}", &Camera1394Config::bayer_method)));
//#line 186 "../cfg/Camera1394.cfg"
      __min__.auto_brightness = 0;
//#line 186 "../cfg/Camera1394.cfg"
      __max__.auto_brightness = 4;
//#line 186 "../cfg/Camera1394.cfg"
      __default__.auto_brightness = 1;
//#line 186 "../cfg/Camera1394.cfg"
      __param_descriptions__.push_back(Camera1394Config::AbstractParamDescriptionConstPtr(new Camera1394Config::ParamDescription<int>("auto_brightness", "int", 0, "Brightness control state.", "{'enum_description': 'Feature control states', 'enum': [{'srcline': 177, 'description': 'Use fixed value', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'Off'}, {'srcline': 178, 'description': 'Query current values', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'Query'}, {'srcline': 179, 'description': 'Camera sets continuously', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'Auto'}, {'srcline': 180, 'description': 'Use explicit value', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'Manual'}, {'srcline': 181, 'description': 'Camera sets once', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 4, 'ctype': 'int', 'type': 'int', 'name': 'OnePush'}, {'srcline': 182, 'description': 'Feature not available', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 5, 'ctype': 'int', 'type': 'int', 'name': 'None'}]}", &Camera1394Config::auto_brightness)));
//#line 189 "../cfg/Camera1394.cfg"
      __min__.brightness = 0.0;
//#line 189 "../cfg/Camera1394.cfg"
      __max__.brightness = 4095.0;
//#line 189 "../cfg/Camera1394.cfg"
      __default__.brightness = 0.0;
//#line 189 "../cfg/Camera1394.cfg"
      __param_descriptions__.push_back(Camera1394Config::AbstractParamDescriptionConstPtr(new Camera1394Config::ParamDescription<double>("brightness", "double", 0, "Black level offset.", "", &Camera1394Config::brightness)));
//#line 193 "../cfg/Camera1394.cfg"
      __min__.auto_exposure = 0;
//#line 193 "../cfg/Camera1394.cfg"
      __max__.auto_exposure = 4;
//#line 193 "../cfg/Camera1394.cfg"
      __default__.auto_exposure = 1;
//#line 193 "../cfg/Camera1394.cfg"
      __param_descriptions__.push_back(Camera1394Config::AbstractParamDescriptionConstPtr(new Camera1394Config::ParamDescription<int>("auto_exposure", "int", 0, "Combined Gain, Iris & Shutter control.", "{'enum_description': 'Feature control states', 'enum': [{'srcline': 177, 'description': 'Use fixed value', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'Off'}, {'srcline': 178, 'description': 'Query current values', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'Query'}, {'srcline': 179, 'description': 'Camera sets continuously', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'Auto'}, {'srcline': 180, 'description': 'Use explicit value', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'Manual'}, {'srcline': 181, 'description': 'Camera sets once', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 4, 'ctype': 'int', 'type': 'int', 'name': 'OnePush'}, {'srcline': 182, 'description': 'Feature not available', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 5, 'ctype': 'int', 'type': 'int', 'name': 'None'}]}", &Camera1394Config::auto_exposure)));
//#line 196 "../cfg/Camera1394.cfg"
      __min__.exposure = -10.0;
//#line 196 "../cfg/Camera1394.cfg"
      __max__.exposure = 4095.0;
//#line 196 "../cfg/Camera1394.cfg"
      __default__.exposure = 0.0;
//#line 196 "../cfg/Camera1394.cfg"
      __param_descriptions__.push_back(Camera1394Config::AbstractParamDescriptionConstPtr(new Camera1394Config::ParamDescription<double>("exposure", "double", 0, "Auto exposure value (like contrast).", "", &Camera1394Config::exposure)));
//#line 199 "../cfg/Camera1394.cfg"
      __min__.auto_focus = 0;
//#line 199 "../cfg/Camera1394.cfg"
      __max__.auto_focus = 4;
//#line 199 "../cfg/Camera1394.cfg"
      __default__.auto_focus = 1;
//#line 199 "../cfg/Camera1394.cfg"
      __param_descriptions__.push_back(Camera1394Config::AbstractParamDescriptionConstPtr(new Camera1394Config::ParamDescription<int>("auto_focus", "int", 0, "Focus control state.", "{'enum_description': 'Feature control states', 'enum': [{'srcline': 177, 'description': 'Use fixed value', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'Off'}, {'srcline': 178, 'description': 'Query current values', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'Query'}, {'srcline': 179, 'description': 'Camera sets continuously', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'Auto'}, {'srcline': 180, 'description': 'Use explicit value', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'Manual'}, {'srcline': 181, 'description': 'Camera sets once', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 4, 'ctype': 'int', 'type': 'int', 'name': 'OnePush'}, {'srcline': 182, 'description': 'Feature not available', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 5, 'ctype': 'int', 'type': 'int', 'name': 'None'}]}", &Camera1394Config::auto_focus)));
//#line 202 "../cfg/Camera1394.cfg"
      __min__.focus = 0.0;
//#line 202 "../cfg/Camera1394.cfg"
      __max__.focus = 4095.0;
//#line 202 "../cfg/Camera1394.cfg"
      __default__.focus = 0.0;
//#line 202 "../cfg/Camera1394.cfg"
      __param_descriptions__.push_back(Camera1394Config::AbstractParamDescriptionConstPtr(new Camera1394Config::ParamDescription<double>("focus", "double", 0, "Focus control.", "", &Camera1394Config::focus)));
//#line 205 "../cfg/Camera1394.cfg"
      __min__.auto_gain = 0;
//#line 205 "../cfg/Camera1394.cfg"
      __max__.auto_gain = 4;
//#line 205 "../cfg/Camera1394.cfg"
      __default__.auto_gain = 1;
//#line 205 "../cfg/Camera1394.cfg"
      __param_descriptions__.push_back(Camera1394Config::AbstractParamDescriptionConstPtr(new Camera1394Config::ParamDescription<int>("auto_gain", "int", 0, "Gain control state.", "{'enum_description': 'Feature control states', 'enum': [{'srcline': 177, 'description': 'Use fixed value', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'Off'}, {'srcline': 178, 'description': 'Query current values', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'Query'}, {'srcline': 179, 'description': 'Camera sets continuously', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'Auto'}, {'srcline': 180, 'description': 'Use explicit value', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'Manual'}, {'srcline': 181, 'description': 'Camera sets once', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 4, 'ctype': 'int', 'type': 'int', 'name': 'OnePush'}, {'srcline': 182, 'description': 'Feature not available', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 5, 'ctype': 'int', 'type': 'int', 'name': 'None'}]}", &Camera1394Config::auto_gain)));
//#line 208 "../cfg/Camera1394.cfg"
      __min__.gain = -10.0;
//#line 208 "../cfg/Camera1394.cfg"
      __max__.gain = 4095.0;
//#line 208 "../cfg/Camera1394.cfg"
      __default__.gain = 0.0;
//#line 208 "../cfg/Camera1394.cfg"
      __param_descriptions__.push_back(Camera1394Config::AbstractParamDescriptionConstPtr(new Camera1394Config::ParamDescription<double>("gain", "double", 0, "Relative circuit gain.", "", &Camera1394Config::gain)));
//#line 211 "../cfg/Camera1394.cfg"
      __min__.auto_gamma = 0;
//#line 211 "../cfg/Camera1394.cfg"
      __max__.auto_gamma = 4;
//#line 211 "../cfg/Camera1394.cfg"
      __default__.auto_gamma = 1;
//#line 211 "../cfg/Camera1394.cfg"
      __param_descriptions__.push_back(Camera1394Config::AbstractParamDescriptionConstPtr(new Camera1394Config::ParamDescription<int>("auto_gamma", "int", 0, "Gamma control state.", "{'enum_description': 'Feature control states', 'enum': [{'srcline': 177, 'description': 'Use fixed value', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'Off'}, {'srcline': 178, 'description': 'Query current values', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'Query'}, {'srcline': 179, 'description': 'Camera sets continuously', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'Auto'}, {'srcline': 180, 'description': 'Use explicit value', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'Manual'}, {'srcline': 181, 'description': 'Camera sets once', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 4, 'ctype': 'int', 'type': 'int', 'name': 'OnePush'}, {'srcline': 182, 'description': 'Feature not available', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 5, 'ctype': 'int', 'type': 'int', 'name': 'None'}]}", &Camera1394Config::auto_gamma)));
//#line 214 "../cfg/Camera1394.cfg"
      __min__.gamma = 0.0;
//#line 214 "../cfg/Camera1394.cfg"
      __max__.gamma = 10.0;
//#line 214 "../cfg/Camera1394.cfg"
      __default__.gamma = 2.2;
//#line 214 "../cfg/Camera1394.cfg"
      __param_descriptions__.push_back(Camera1394Config::AbstractParamDescriptionConstPtr(new Camera1394Config::ParamDescription<double>("gamma", "double", 0, "Gamma expansion exponent.", "", &Camera1394Config::gamma)));
//#line 217 "../cfg/Camera1394.cfg"
      __min__.auto_hue = 0;
//#line 217 "../cfg/Camera1394.cfg"
      __max__.auto_hue = 4;
//#line 217 "../cfg/Camera1394.cfg"
      __default__.auto_hue = 1;
//#line 217 "../cfg/Camera1394.cfg"
      __param_descriptions__.push_back(Camera1394Config::AbstractParamDescriptionConstPtr(new Camera1394Config::ParamDescription<int>("auto_hue", "int", 0, "Hue control state.", "{'enum_description': 'Feature control states', 'enum': [{'srcline': 177, 'description': 'Use fixed value', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'Off'}, {'srcline': 178, 'description': 'Query current values', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'Query'}, {'srcline': 179, 'description': 'Camera sets continuously', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'Auto'}, {'srcline': 180, 'description': 'Use explicit value', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'Manual'}, {'srcline': 181, 'description': 'Camera sets once', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 4, 'ctype': 'int', 'type': 'int', 'name': 'OnePush'}, {'srcline': 182, 'description': 'Feature not available', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 5, 'ctype': 'int', 'type': 'int', 'name': 'None'}]}", &Camera1394Config::auto_hue)));
//#line 220 "../cfg/Camera1394.cfg"
      __min__.hue = 0.0;
//#line 220 "../cfg/Camera1394.cfg"
      __max__.hue = 4095.0;
//#line 220 "../cfg/Camera1394.cfg"
      __default__.hue = 0.0;
//#line 220 "../cfg/Camera1394.cfg"
      __param_descriptions__.push_back(Camera1394Config::AbstractParamDescriptionConstPtr(new Camera1394Config::ParamDescription<double>("hue", "double", 0, "Color phase.", "", &Camera1394Config::hue)));
//#line 223 "../cfg/Camera1394.cfg"
      __min__.auto_iris = 0;
//#line 223 "../cfg/Camera1394.cfg"
      __max__.auto_iris = 4;
//#line 223 "../cfg/Camera1394.cfg"
      __default__.auto_iris = 1;
//#line 223 "../cfg/Camera1394.cfg"
      __param_descriptions__.push_back(Camera1394Config::AbstractParamDescriptionConstPtr(new Camera1394Config::ParamDescription<int>("auto_iris", "int", 0, "Iris control state.", "{'enum_description': 'Feature control states', 'enum': [{'srcline': 177, 'description': 'Use fixed value', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'Off'}, {'srcline': 178, 'description': 'Query current values', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'Query'}, {'srcline': 179, 'description': 'Camera sets continuously', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'Auto'}, {'srcline': 180, 'description': 'Use explicit value', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'Manual'}, {'srcline': 181, 'description': 'Camera sets once', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 4, 'ctype': 'int', 'type': 'int', 'name': 'OnePush'}, {'srcline': 182, 'description': 'Feature not available', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 5, 'ctype': 'int', 'type': 'int', 'name': 'None'}]}", &Camera1394Config::auto_iris)));
//#line 226 "../cfg/Camera1394.cfg"
      __min__.iris = 0.0;
//#line 226 "../cfg/Camera1394.cfg"
      __max__.iris = 4095.0;
//#line 226 "../cfg/Camera1394.cfg"
      __default__.iris = 8.0;
//#line 226 "../cfg/Camera1394.cfg"
      __param_descriptions__.push_back(Camera1394Config::AbstractParamDescriptionConstPtr(new Camera1394Config::ParamDescription<double>("iris", "double", 0, "Iris control.", "", &Camera1394Config::iris)));
//#line 229 "../cfg/Camera1394.cfg"
      __min__.auto_saturation = 0;
//#line 229 "../cfg/Camera1394.cfg"
      __max__.auto_saturation = 4;
//#line 229 "../cfg/Camera1394.cfg"
      __default__.auto_saturation = 1;
//#line 229 "../cfg/Camera1394.cfg"
      __param_descriptions__.push_back(Camera1394Config::AbstractParamDescriptionConstPtr(new Camera1394Config::ParamDescription<int>("auto_saturation", "int", 0, "Saturation control state.", "{'enum_description': 'Feature control states', 'enum': [{'srcline': 177, 'description': 'Use fixed value', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'Off'}, {'srcline': 178, 'description': 'Query current values', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'Query'}, {'srcline': 179, 'description': 'Camera sets continuously', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'Auto'}, {'srcline': 180, 'description': 'Use explicit value', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'Manual'}, {'srcline': 181, 'description': 'Camera sets once', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 4, 'ctype': 'int', 'type': 'int', 'name': 'OnePush'}, {'srcline': 182, 'description': 'Feature not available', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 5, 'ctype': 'int', 'type': 'int', 'name': 'None'}]}", &Camera1394Config::auto_saturation)));
//#line 232 "../cfg/Camera1394.cfg"
      __min__.saturation = 0.0;
//#line 232 "../cfg/Camera1394.cfg"
      __max__.saturation = 4095.0;
//#line 232 "../cfg/Camera1394.cfg"
      __default__.saturation = 1.0;
//#line 232 "../cfg/Camera1394.cfg"
      __param_descriptions__.push_back(Camera1394Config::AbstractParamDescriptionConstPtr(new Camera1394Config::ParamDescription<double>("saturation", "double", 0, "Color saturation.", "", &Camera1394Config::saturation)));
//#line 235 "../cfg/Camera1394.cfg"
      __min__.auto_sharpness = 0;
//#line 235 "../cfg/Camera1394.cfg"
      __max__.auto_sharpness = 4;
//#line 235 "../cfg/Camera1394.cfg"
      __default__.auto_sharpness = 1;
//#line 235 "../cfg/Camera1394.cfg"
      __param_descriptions__.push_back(Camera1394Config::AbstractParamDescriptionConstPtr(new Camera1394Config::ParamDescription<int>("auto_sharpness", "int", 0, "Sharpness control state.", "{'enum_description': 'Feature control states', 'enum': [{'srcline': 177, 'description': 'Use fixed value', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'Off'}, {'srcline': 178, 'description': 'Query current values', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'Query'}, {'srcline': 179, 'description': 'Camera sets continuously', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'Auto'}, {'srcline': 180, 'description': 'Use explicit value', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'Manual'}, {'srcline': 181, 'description': 'Camera sets once', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 4, 'ctype': 'int', 'type': 'int', 'name': 'OnePush'}, {'srcline': 182, 'description': 'Feature not available', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 5, 'ctype': 'int', 'type': 'int', 'name': 'None'}]}", &Camera1394Config::auto_sharpness)));
//#line 238 "../cfg/Camera1394.cfg"
      __min__.sharpness = 0.0;
//#line 238 "../cfg/Camera1394.cfg"
      __max__.sharpness = 4095.0;
//#line 238 "../cfg/Camera1394.cfg"
      __default__.sharpness = 1.0;
//#line 238 "../cfg/Camera1394.cfg"
      __param_descriptions__.push_back(Camera1394Config::AbstractParamDescriptionConstPtr(new Camera1394Config::ParamDescription<double>("sharpness", "double", 0, "Image sharpness.", "", &Camera1394Config::sharpness)));
//#line 241 "../cfg/Camera1394.cfg"
      __min__.auto_shutter = 0;
//#line 241 "../cfg/Camera1394.cfg"
      __max__.auto_shutter = 4;
//#line 241 "../cfg/Camera1394.cfg"
      __default__.auto_shutter = 1;
//#line 241 "../cfg/Camera1394.cfg"
      __param_descriptions__.push_back(Camera1394Config::AbstractParamDescriptionConstPtr(new Camera1394Config::ParamDescription<int>("auto_shutter", "int", 0, "Shutter control state.", "{'enum_description': 'Feature control states', 'enum': [{'srcline': 177, 'description': 'Use fixed value', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'Off'}, {'srcline': 178, 'description': 'Query current values', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'Query'}, {'srcline': 179, 'description': 'Camera sets continuously', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'Auto'}, {'srcline': 180, 'description': 'Use explicit value', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'Manual'}, {'srcline': 181, 'description': 'Camera sets once', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 4, 'ctype': 'int', 'type': 'int', 'name': 'OnePush'}, {'srcline': 182, 'description': 'Feature not available', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 5, 'ctype': 'int', 'type': 'int', 'name': 'None'}]}", &Camera1394Config::auto_shutter)));
//#line 244 "../cfg/Camera1394.cfg"
      __min__.shutter = 0.0;
//#line 244 "../cfg/Camera1394.cfg"
      __max__.shutter = 4095.0;
//#line 244 "../cfg/Camera1394.cfg"
      __default__.shutter = 1.0;
//#line 244 "../cfg/Camera1394.cfg"
      __param_descriptions__.push_back(Camera1394Config::AbstractParamDescriptionConstPtr(new Camera1394Config::ParamDescription<double>("shutter", "double", 0, "Shutter speed.", "", &Camera1394Config::shutter)));
//#line 247 "../cfg/Camera1394.cfg"
      __min__.auto_white_balance = 0;
//#line 247 "../cfg/Camera1394.cfg"
      __max__.auto_white_balance = 4;
//#line 247 "../cfg/Camera1394.cfg"
      __default__.auto_white_balance = 1;
//#line 247 "../cfg/Camera1394.cfg"
      __param_descriptions__.push_back(Camera1394Config::AbstractParamDescriptionConstPtr(new Camera1394Config::ParamDescription<int>("auto_white_balance", "int", 0, "White balance control state.", "{'enum_description': 'Feature control states', 'enum': [{'srcline': 177, 'description': 'Use fixed value', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'Off'}, {'srcline': 178, 'description': 'Query current values', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'Query'}, {'srcline': 179, 'description': 'Camera sets continuously', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'Auto'}, {'srcline': 180, 'description': 'Use explicit value', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'Manual'}, {'srcline': 181, 'description': 'Camera sets once', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 4, 'ctype': 'int', 'type': 'int', 'name': 'OnePush'}, {'srcline': 182, 'description': 'Feature not available', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 5, 'ctype': 'int', 'type': 'int', 'name': 'None'}]}", &Camera1394Config::auto_white_balance)));
//#line 251 "../cfg/Camera1394.cfg"
      __min__.white_balance_BU = 0.0;
//#line 251 "../cfg/Camera1394.cfg"
      __max__.white_balance_BU = 4095.0;
//#line 251 "../cfg/Camera1394.cfg"
      __default__.white_balance_BU = 0.0;
//#line 251 "../cfg/Camera1394.cfg"
      __param_descriptions__.push_back(Camera1394Config::AbstractParamDescriptionConstPtr(new Camera1394Config::ParamDescription<double>("white_balance_BU", "double", 0, "Blue or U component of white balance.", "", &Camera1394Config::white_balance_BU)));
//#line 255 "../cfg/Camera1394.cfg"
      __min__.white_balance_RV = 0.0;
//#line 255 "../cfg/Camera1394.cfg"
      __max__.white_balance_RV = 4095.0;
//#line 255 "../cfg/Camera1394.cfg"
      __default__.white_balance_RV = 0.0;
//#line 255 "../cfg/Camera1394.cfg"
      __param_descriptions__.push_back(Camera1394Config::AbstractParamDescriptionConstPtr(new Camera1394Config::ParamDescription<double>("white_balance_RV", "double", 0, "Red or V component of white balance.", "", &Camera1394Config::white_balance_RV)));
//#line 258 "../cfg/Camera1394.cfg"
      __min__.auto_zoom = 0;
//#line 258 "../cfg/Camera1394.cfg"
      __max__.auto_zoom = 4;
//#line 258 "../cfg/Camera1394.cfg"
      __default__.auto_zoom = 1;
//#line 258 "../cfg/Camera1394.cfg"
      __param_descriptions__.push_back(Camera1394Config::AbstractParamDescriptionConstPtr(new Camera1394Config::ParamDescription<int>("auto_zoom", "int", 0, "Zoom control state.", "{'enum_description': 'Feature control states', 'enum': [{'srcline': 177, 'description': 'Use fixed value', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'Off'}, {'srcline': 178, 'description': 'Query current values', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'Query'}, {'srcline': 179, 'description': 'Camera sets continuously', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'Auto'}, {'srcline': 180, 'description': 'Use explicit value', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'Manual'}, {'srcline': 181, 'description': 'Camera sets once', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 4, 'ctype': 'int', 'type': 'int', 'name': 'OnePush'}, {'srcline': 182, 'description': 'Feature not available', 'srcfile': '../cfg/Camera1394.cfg', 'cconsttype': 'const int', 'value': 5, 'ctype': 'int', 'type': 'int', 'name': 'None'}]}", &Camera1394Config::auto_zoom)));
//#line 261 "../cfg/Camera1394.cfg"
      __min__.zoom = 0.0;
//#line 261 "../cfg/Camera1394.cfg"
      __max__.zoom = 4095.0;
//#line 261 "../cfg/Camera1394.cfg"
      __default__.zoom = 0.0;
//#line 261 "../cfg/Camera1394.cfg"
      __param_descriptions__.push_back(Camera1394Config::AbstractParamDescriptionConstPtr(new Camera1394Config::ParamDescription<double>("zoom", "double", 0, "Zoom control.", "", &Camera1394Config::zoom)));
//#line 264 "../cfg/Camera1394.cfg"
      __min__.use_ros_time = 0;
//#line 264 "../cfg/Camera1394.cfg"
      __max__.use_ros_time = 1;
//#line 264 "../cfg/Camera1394.cfg"
      __default__.use_ros_time = 0;
//#line 264 "../cfg/Camera1394.cfg"
      __param_descriptions__.push_back(Camera1394Config::AbstractParamDescriptionConstPtr(new Camera1394Config::ParamDescription<bool>("use_ros_time", "bool", 3, "Timestamp Image and CameraInfo using ros::Time::now()", "", &Camera1394Config::use_ros_time)));
//#line 239 "/opt/ros/diamondback/stacks/driver_common/dynamic_reconfigure/templates/ConfigType.h"
    
      for (std::vector<Camera1394Config::AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); i++)
        __description_message__.parameters.push_back(**i);
      __max__.__toMessage__(__description_message__.max, __param_descriptions__); 
      __min__.__toMessage__(__description_message__.min, __param_descriptions__); 
      __default__.__toMessage__(__description_message__.dflt, __param_descriptions__); 
    }
    std::vector<Camera1394Config::AbstractParamDescriptionConstPtr> __param_descriptions__;
    Camera1394Config __max__;
    Camera1394Config __min__;
    Camera1394Config __default__;
    dynamic_reconfigure::ConfigDescription __description_message__;
    static const Camera1394ConfigStatics *get_instance()
    {
      // Split this off in a separate function because I know that
      // instance will get initialized the first time get_instance is
      // called, and I am guaranteeing that get_instance gets called at
      // most once.
      static Camera1394ConfigStatics instance;
      return &instance;
    }
  };

  inline const dynamic_reconfigure::ConfigDescription &Camera1394Config::__getDescriptionMessage__() 
  {
    return __get_statics__()->__description_message__;
  }

  inline const Camera1394Config &Camera1394Config::__getDefault__()
  {
    return __get_statics__()->__default__;
  }
  
  inline const Camera1394Config &Camera1394Config::__getMax__()
  {
    return __get_statics__()->__max__;
  }
  
  inline const Camera1394Config &Camera1394Config::__getMin__()
  {
    return __get_statics__()->__min__;
  }
  
  inline const std::vector<Camera1394Config::AbstractParamDescriptionConstPtr> &Camera1394Config::__getParamDescriptions__()
  {
    return __get_statics__()->__param_descriptions__;
  }

  inline const Camera1394ConfigStatics *Camera1394Config::__get_statics__()
  {
    const static Camera1394ConfigStatics *statics;
  
    if (statics) // Common case
      return statics;

    boost::mutex::scoped_lock lock(dynamic_reconfigure::__init_mutex__);

    if (statics) // In case we lost a race.
      return statics;

    statics = Camera1394ConfigStatics::get_instance();
    
    return statics;
  }

//#line 54 "../cfg/Camera1394.cfg"
      const char * const Camera1394_Format0_Mode0 = "160x120_yuv444";
//#line 55 "../cfg/Camera1394.cfg"
      const char * const Camera1394_Format0_Mode1 = "320x240_yuv422";
//#line 56 "../cfg/Camera1394.cfg"
      const char * const Camera1394_Format0_Mode2 = "640x480_yuv411";
//#line 57 "../cfg/Camera1394.cfg"
      const char * const Camera1394_Format0_Mode3 = "640x480_yuv422";
//#line 58 "../cfg/Camera1394.cfg"
      const char * const Camera1394_Format0_Mode4 = "640x480_rgb8";
//#line 59 "../cfg/Camera1394.cfg"
      const char * const Camera1394_Format0_Mode5 = "640x480_mono8";
//#line 60 "../cfg/Camera1394.cfg"
      const char * const Camera1394_Format0_Mode6 = "640x480_mono16";
//#line 61 "../cfg/Camera1394.cfg"
      const char * const Camera1394_Format1_Mode0 = "800x600_yuv422";
//#line 62 "../cfg/Camera1394.cfg"
      const char * const Camera1394_Format1_Mode1 = "800x600_rgb8";
//#line 63 "../cfg/Camera1394.cfg"
      const char * const Camera1394_Format1_Mode2 = "800x600_mono8";
//#line 64 "../cfg/Camera1394.cfg"
      const char * const Camera1394_Format1_Mode6 = "800x600_mono16";
//#line 65 "../cfg/Camera1394.cfg"
      const char * const Camera1394_Format1_Mode3 = "1024x768_yuv422";
//#line 66 "../cfg/Camera1394.cfg"
      const char * const Camera1394_Format1_Mode4 = "1024x768_rgb8";
//#line 67 "../cfg/Camera1394.cfg"
      const char * const Camera1394_Format1_Mode5 = "1024x768_mono8";
//#line 68 "../cfg/Camera1394.cfg"
      const char * const Camera1394_Format1_Mode7 = "1024x768_mono16";
//#line 69 "../cfg/Camera1394.cfg"
      const char * const Camera1394_Format2_Mode0 = "1280x960_yuv422";
//#line 70 "../cfg/Camera1394.cfg"
      const char * const Camera1394_Format2_Mode1 = "1280x960_rgb8";
//#line 71 "../cfg/Camera1394.cfg"
      const char * const Camera1394_Format2_Mode2 = "1280x960_mono8";
//#line 72 "../cfg/Camera1394.cfg"
      const char * const Camera1394_Format2_Mode6 = "1280x960_mono16";
//#line 73 "../cfg/Camera1394.cfg"
      const char * const Camera1394_Format2_Mode3 = "1600x1200_yuv422";
//#line 74 "../cfg/Camera1394.cfg"
      const char * const Camera1394_Format2_Mode4 = "1600x1200_rgb8";
//#line 75 "../cfg/Camera1394.cfg"
      const char * const Camera1394_Format2_Mode5 = "1600x1200_mono8";
//#line 76 "../cfg/Camera1394.cfg"
      const char * const Camera1394_Format2_Mode7 = "1600x1200_mono16";
//#line 77 "../cfg/Camera1394.cfg"
      const char * const Camera1394_Format7_Mode0 = "format7_mode0";
//#line 78 "../cfg/Camera1394.cfg"
      const char * const Camera1394_Format7_Mode1 = "format7_mode1";
//#line 79 "../cfg/Camera1394.cfg"
      const char * const Camera1394_Format7_Mode2 = "format7_mode2";
//#line 80 "../cfg/Camera1394.cfg"
      const char * const Camera1394_Format7_Mode3 = "format7_mode3";
//#line 81 "../cfg/Camera1394.cfg"
      const char * const Camera1394_Format7_Mode4 = "format7_mode4";
//#line 82 "../cfg/Camera1394.cfg"
      const char * const Camera1394_Format7_Mode5 = "format7_mode5";
//#line 83 "../cfg/Camera1394.cfg"
      const char * const Camera1394_Format7_Mode6 = "format7_mode6";
//#line 84 "../cfg/Camera1394.cfg"
      const char * const Camera1394_Format7_Mode7 = "format7_mode7";
//#line 133 "../cfg/Camera1394.cfg"
      const char * const Camera1394_mono8 = "mono8";
//#line 134 "../cfg/Camera1394.cfg"
      const char * const Camera1394_mono16 = "mono16";
//#line 135 "../cfg/Camera1394.cfg"
      const char * const Camera1394_mono16s = "mono16s";
//#line 136 "../cfg/Camera1394.cfg"
      const char * const Camera1394_raw8 = "raw8";
//#line 137 "../cfg/Camera1394.cfg"
      const char * const Camera1394_raw16 = "raw16";
//#line 138 "../cfg/Camera1394.cfg"
      const char * const Camera1394_rgb8 = "rgb8";
//#line 139 "../cfg/Camera1394.cfg"
      const char * const Camera1394_rgb16 = "rgb16";
//#line 140 "../cfg/Camera1394.cfg"
      const char * const Camera1394_rgb16s = "rgb16s";
//#line 141 "../cfg/Camera1394.cfg"
      const char * const Camera1394_yuv411 = "yuv411";
//#line 142 "../cfg/Camera1394.cfg"
      const char * const Camera1394_yuv422 = "yuv422";
//#line 143 "../cfg/Camera1394.cfg"
      const char * const Camera1394_yuv444 = "yuv444";
//#line 151 "../cfg/Camera1394.cfg"
      const char * const Camera1394_none = "";
//#line 152 "../cfg/Camera1394.cfg"
      const char * const Camera1394_rggb = "rggb";
//#line 153 "../cfg/Camera1394.cfg"
      const char * const Camera1394_gbrg = "gbrg";
//#line 154 "../cfg/Camera1394.cfg"
      const char * const Camera1394_grbg = "grbg";
//#line 155 "../cfg/Camera1394.cfg"
      const char * const Camera1394_bggr = "bggr";
//#line 163 "../cfg/Camera1394.cfg"
      const char * const Camera1394_image_proc = "";
//#line 164 "../cfg/Camera1394.cfg"
      const char * const Camera1394_DownSample = "DownSample";
//#line 165 "../cfg/Camera1394.cfg"
      const char * const Camera1394_Simple = "Simple";
//#line 166 "../cfg/Camera1394.cfg"
      const char * const Camera1394_Bilinear = "Bilinear";
//#line 167 "../cfg/Camera1394.cfg"
      const char * const Camera1394_HQ = "HQ";
//#line 168 "../cfg/Camera1394.cfg"
      const char * const Camera1394_VNG = "VNG";
//#line 169 "../cfg/Camera1394.cfg"
      const char * const Camera1394_AHD = "AHD";
//#line 177 "../cfg/Camera1394.cfg"
      const int Camera1394_Off = 0;
//#line 178 "../cfg/Camera1394.cfg"
      const int Camera1394_Query = 1;
//#line 179 "../cfg/Camera1394.cfg"
      const int Camera1394_Auto = 2;
//#line 180 "../cfg/Camera1394.cfg"
      const int Camera1394_Manual = 3;
//#line 181 "../cfg/Camera1394.cfg"
      const int Camera1394_OnePush = 4;
//#line 182 "../cfg/Camera1394.cfg"
      const int Camera1394_None = 5;
}

#endif // __CAMERA1394RECONFIGURATOR_H__
