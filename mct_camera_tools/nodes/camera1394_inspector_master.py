#!/usr/bin/env python
import roslib
roslib.load_manifest('mct_camera_tools')
import rospy
import os
import os.path
import tempfile
import subprocess
from mct_xml_tools.machine import read_machine_file
from mct_xml_tools.launch import create_inspector_launch

class Camera_Inspector_Master(object):
    """
    Launches camera inspector nodes on all computers in the machine file.
    """
    def __init__(self):
        # Get location of machine file
        self.mct_config = os.path.join(os.environ['ROS_LOCAL'], os.environ['MCT_CONFIG'])
        self.machine_file = os.path.join(self.mct_config, 'machine', 'mct.machine')

        # Get name for autogenerated inspector launch file
        self.tmp_dir = tempfile.gettempdir()
        self.launch_file = os.path.join(self.tmp_dir,'inspector_nodes.launch')

        self.launch_popen = None
        rospy.on_shutdown(self.clean_up)
        rospy.init_node('camera_inspector_master')
        self.launch_inspector_nodes()

    def run(self):
        rospy.spin()

    def launch_inspector_nodes(self):
        """
        Lauches camera inspector nodes on all computers in the cluster.
        """
        self.create_launch_file()

    def kill_inspector_nodes(self):
        """
        Kills all camera inspector nodes by killing the launch process.
        """
        if self.launch_popen is not None:
            pass

    def create_launch_file(self):
        """
        Create temporary launch file for camera inspector nodes.
        """
        # Read machine file
        machine_list = read_machine_file()
        machine_name_list = [m['name'] for m in machine_list]
        create_inspector_launch(self.launch_file, machine_name_list)

    def delete_launch_file(self):
        """
        Deletes temporary launch file for camera inspector nodes.
        """
        os.remove(self.launch_file)


    def clean_up(self):
        self.kill_inspector_nodes()
        self.delete_launch_file()

# -----------------------------------------------------------------------------
if __name__ == '__main__':

    node = Camera_Inspector_Master()
    node.run()
